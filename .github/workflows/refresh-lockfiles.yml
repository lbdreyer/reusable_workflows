# This workflow periodically creates new environment lock files based on the newest
# available packages and dependencies.
#
# Environment specifications are given as conda environment.yml files found in
# `requirements/ci/py**.yml`.  These state the packages required, the conda channels
# that the packages will be pulled from, and any versions of packages that need to be
# pinned at specific versions.
#
# For environments that have changed, a pull request will be made and submitted
# to the main branch

name: Refresh Lockfiles


on:
  workflow_dispatch:
  workflow_call:


jobs:

  get_python_matrix:
    # Determines which Python versions should be included in the matrix used in
    # the gen_lockfiles job.
    #if: "github.repository_owner == 'SciTools'"
    if: "github.repository_owner == 'lbdreyer'"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get_py.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: get_py
        run: echo "::set-output name=matrix::$(ls -1 requirements/ci/py*.yml | xargs -n1 basename | sed 's/....$//' | jq -cnR '[inputs]')"

  gen_lockfiles:
    # this is a matrix job: it splits to create new lockfiles for each
    # of the CI test python versions.
    #if: "github.repository_owner == 'SciTools'"
    if: "github.repository_owner == 'lbdreyer'"
    runs-on: ubuntu-latest
    needs: get_python_matrix

    strategy:
      matrix:
        python: ${{ fromJSON(needs.get_python_matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3
      - name: install requirements
        run: |
          source $CONDA/bin/activate base
          conda install -y -c conda-forge conda-libmamba-solver conda-lock
      - name: generate lockfile
        env:
          CONDA_EXPERIMENTAL_SOLVER: libmamba
        run: |
          $CONDA/bin/conda-lock lock -k explicit -p linux-64 -f requirements/ci/${{matrix.python}}.yml
          mv conda-linux-64.lock ${{matrix.python}}-linux-64.lock
      - name: output lockfile
        uses: actions/upload-artifact@v3
        with:
          path: ${{matrix.python}}-linux-64.lock

